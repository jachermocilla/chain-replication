package proto;

// generic message
message Message {
	enum MessageType {
		REQUEST = 0;
		REPLY = 1;
		ACKNOWLEDGE = 2;
		HEARTBEAT = 3;
		TO_BE_HEAD = 4;
		TO_BE_TAIL = 5;
		NEW_SUCC_SERVER = 6;
		NEW_PRE_SERVER = 7;
		NEW_TAIL_READY = 8;
		NEW_HEAD = 9;
		NEW_TAIL = 10;
		REQ_SEQ = 11;
		JOIN = 12;
		EXTEND_SERVER = 13;
		EXTEND_MSG = 14;
		EXTEND_FINISH = 15;
	}
	required MessageType type = 1;
	optional Request request = 2;
	optional Reply reply = 3;
	optional Acknowledge ack = 4;
	optional Heartbeat heartbeat = 5;
	optional Address addr = 6;
	optional Notify notify = 7;
	optional Reqseq reqseq = 8;
	optional Join join = 9;
	optional ExtendMsg extendmsg = 10;
	optional ExtendFinish extend_finish = 11;
}

message Address {
	required string ip = 1;
	required int32 port = 2;
}

message Request {
	enum RequestType {
		QUERY = 0;
		DEPOSIT = 1;
		WITHDRAW = 2;
		TRANSFER = 3;
		TRANSFERTO = 4;
	}
	enum CheckRequest {
		INCONSISTENT = 0;
		PROCESSED = 1;
		NEWREQ = 2;
	}
	required string req_id = 1;
	required RequestType type = 2;
	required Address client_addr = 3;
	optional uint32 bank_update_seq = 4;
	optional string account_id = 5;
	optional string bank_id = 6;
	optional float amount = 7;
	optional string dest_bank_id = 8;
	optional string dest_account_id = 9;
	optional Reply reply = 10;
	optional CheckRequest check_result = 11;
}

message Reply {
	enum Outcome {
		PROCESSED = 0;
		INCONSISTENT_WITH_HISTORY = 1;
		INSUFFICIENT_FUNDS = 2;
	}
	required string req_id = 1;
	required Outcome outcome = 2;
  required string account_id = 3;
	optional float balance = 4;
}

message Acknowledge {
	required uint32 bank_update_seq = 1;
}

message Heartbeat {
	required string bank_id = 1;
	required Address server_addr = 2;
}

message Notify {
	required string bank_id = 1;
	required Address server_addr = 2;
}

message Reqseq {
  required uint32 bank_update_seq = 1;
  required string bank_id = 2;
  required Address pre_addr = 3;
  required Address succ_addr = 4;
}

message Join {
	required string bank_id = 1;
	required Address server_addr = 2;
}

message Account {
  required string account_id = 1;
  required float balance = 2;
}

message ExtendMsg {
  enum Type {
    ACCOUNT = 0;
    HISTORY = 1;
    SENT = 2;
    FIN = 3;
  }
  required Type type = 1;
  optional Request request = 2;
  optional Account account = 3;
}

message ExtendFinish {
	required string bank_id = 1;
	required Address server_addr = 2;
}
